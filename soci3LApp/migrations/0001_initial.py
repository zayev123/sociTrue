# Generated by Django 3.2.5 on 2021-08-16 12:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import soci_3_api.myStorage


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('pseudo_name', models.CharField(blank=True, max_length=200, null=True)),
                ('first_name', models.CharField(blank=True, max_length=200, null=True)),
                ('last_name', models.CharField(blank=True, max_length=200, null=True)),
                ('gender', models.CharField(blank=True, max_length=200, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_new', models.BooleanField(default=False)),
                ('last_login', models.DateTimeField(auto_now=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('image', models.ImageField(blank=True, null=True, storage=soci_3_api.myStorage.OverwriteStorage(), upload_to='profile_images')),
                ('bas64Image', models.TextField(blank=True, null=True)),
                ('imageType', models.CharField(blank=True, max_length=10, null=True)),
                ('phoneNumber', models.CharField(blank=True, max_length=30, null=True)),
                ('isLoggedIn', models.BooleanField(default=True)),
                ('socialImageUrl', models.CharField(blank=True, max_length=500, null=True)),
                ('aboutYourself', models.TextField(blank=True, null=True)),
                ('shadowUser', models.BooleanField(default=False)),
                ('birthDate', models.DateField(blank=True, null=True)),
                ('isBlocked', models.BooleanField(default=False)),
                ('isPrivate', models.BooleanField(default=False)),
                ('friendStatus', models.CharField(blank=True, max_length=30, null=True)),
                ('isAnonymous', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ActivityDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('actDescription', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, storage=soci_3_api.myStorage.OverwriteStorage(), upload_to='activity_images')),
                ('bas64Image', models.TextField(blank=True, null=True)),
                ('imageType', models.CharField(blank=True, max_length=10, null=True)),
                ('dayDate', models.DateField(blank=True, null=True)),
                ('theTime', models.CharField(blank=True, max_length=100, null=True)),
                ('actDuration', models.IntegerField(blank=True, null=True)),
                ('isAdress', models.BooleanField(default=True)),
                ('isOnline', models.BooleanField(default=False)),
                ('isAdduRsl', models.BooleanField(default=False)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('location', models.CharField(blank=True, max_length=800, null=True)),
                ('locLatitude', models.CharField(blank=True, max_length=300, null=True)),
                ('locLongitude', models.CharField(blank=True, max_length=300, null=True)),
                ('howToFind', models.TextField(blank=True, null=True)),
                ('orgaNote', models.TextField(blank=True, null=True)),
                ('mndtryPrty', models.BooleanField(default=False)),
                ('cnclAdrs', models.BooleanField(default=False)),
                ('capacity', models.IntegerField(blank=True, null=True)),
                ('ticketuRsl', models.CharField(blank=True, max_length=400, null=True)),
                ('whatsapUrl', models.CharField(blank=True, max_length=200, null=True)),
                ('forFriend', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['dayDate'],
            },
        ),
        migrations.CreateModel(
            name='CategoryDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categoryName', models.CharField(max_length=60)),
                ('catImage', models.ImageField(blank=True, null=True, storage=soci_3_api.myStorage.OverwriteStorage(), upload_to='category_images')),
            ],
        ),
        migrations.CreateModel(
            name='HobbyDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hobbyName', models.CharField(max_length=60)),
                ('hobImage', models.ImageField(blank=True, null=True, storage=soci_3_api.myStorage.OverwriteStorage(), upload_to='hobby_images')),
            ],
        ),
        migrations.CreateModel(
            name='WaitingParticipants',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pastPrtcnt', models.BooleanField(default=False)),
                ('actId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soci3LApp.activitydetails')),
                ('prtcpntId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-pastPrtcnt'],
            },
        ),
        migrations.CreateModel(
            name='UserFriend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('friendId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='myFriend', to=settings.AUTH_USER_MODEL)),
                ('myId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mySelf', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PermaRemParticipants',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soci3LApp.activitydetails')),
                ('prtcpntId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FriendRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('friendId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friendId', to=settings.AUTH_USER_MODEL)),
                ('myId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='myId', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ChatModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chatName', models.CharField(max_length=100)),
                ('lastMessage', models.TextField(blank=True, null=True)),
                ('isGroup', models.BooleanField(default=False)),
                ('image', models.ImageField(blank=True, null=True, upload_to='chat_images')),
                ('bas64Image', models.TextField(blank=True, null=True)),
                ('imageType', models.CharField(blank=True, max_length=10, null=True)),
                ('lastUpdate', models.DateTimeField(auto_now=True)),
                ('chatParticipants', models.ManyToManyField(blank=True, related_name='chatModels', to=settings.AUTH_USER_MODEL)),
                ('newMessagesFor', models.ManyToManyField(blank=True, related_name='myNewChats', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-lastUpdate'],
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('messageContent', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='message_images')),
                ('bas64Image', models.TextField(blank=True, null=True)),
                ('imageType', models.CharField(blank=True, max_length=10, null=True)),
                ('comLat', models.CharField(blank=True, max_length=300, null=True)),
                ('comLong', models.CharField(blank=True, max_length=300, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chatMessages', to=settings.AUTH_USER_MODEL)),
                ('forChat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chatMessages', to='soci3LApp.chatmodel')),
            ],
            options={
                'ordering': ['-createdAt'],
            },
        ),
        migrations.CreateModel(
            name='BlockedBy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profileIdToBlock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blockedBy', to=settings.AUTH_USER_MODEL)),
                ('theManWhoBlocked', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocker', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='activitydetails',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activityDetails', to='soci3LApp.categorydetails'),
        ),
        migrations.AddField(
            model_name='activitydetails',
            name='organizerDetails',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activityDetails', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ActiveParticipants',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soci3LApp.activitydetails')),
                ('prtcpntId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ActComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commentText', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='comment_images')),
                ('bas64Image', models.TextField(blank=True, null=True)),
                ('imageType', models.CharField(blank=True, max_length=10, null=True)),
                ('comLat', models.CharField(blank=True, max_length=300, null=True)),
                ('comLong', models.CharField(blank=True, max_length=300, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('forActivity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actComment', to='soci3LApp.activitydetails')),
                ('idOwner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actComment', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='userinfo',
            name='friendRequests',
            field=models.ManyToManyField(blank=True, related_name='receivedRequests', through='soci3LApp.FriendRequest', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='userinfo',
            name='friends',
            field=models.ManyToManyField(blank=True, related_name='myFriends', through='soci3LApp.UserFriend', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='userinfo',
            name='participatedActivitiesList',
            field=models.ManyToManyField(blank=True, related_name='participants', through='soci3LApp.ActiveParticipants', to='soci3LApp.ActivityDetails'),
        ),
        migrations.AddField(
            model_name='userinfo',
            name='permaRemPrtcpnts',
            field=models.ManyToManyField(blank=True, related_name='rem_users', through='soci3LApp.PermaRemParticipants', to='soci3LApp.ActivityDetails'),
        ),
        migrations.AddField(
            model_name='userinfo',
            name='personalHobbyList',
            field=models.ManyToManyField(blank=True, related_name='userInfo', to='soci3LApp.HobbyDetails'),
        ),
        migrations.AddField(
            model_name='userinfo',
            name='waitingPrtcpnts',
            field=models.ManyToManyField(blank=True, related_name='waiting_users', through='soci3LApp.WaitingParticipants', to='soci3LApp.ActivityDetails'),
        ),
    ]
